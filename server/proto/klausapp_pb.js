// source: klausapp.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.klausapp.Category', null, global);
goog.exportSymbol('proto.klausapp.CategoryScore', null, global);
goog.exportSymbol('proto.klausapp.CategoryScoreOverTimePeriod', null, global);
goog.exportSymbol('proto.klausapp.DateScore', null, global);
goog.exportSymbol('proto.klausapp.GetScoreChangePoPRequest', null, global);
goog.exportSymbol('proto.klausapp.OverallScore', null, global);
goog.exportSymbol('proto.klausapp.ScoreChangePoP', null, global);
goog.exportSymbol('proto.klausapp.TicketScoreByCategory', null, global);
goog.exportSymbol('proto.klausapp.TimePeriod', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.klausapp.TimePeriod = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.klausapp.TimePeriod, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.klausapp.TimePeriod.displayName = 'proto.klausapp.TimePeriod';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.klausapp.Category = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.klausapp.Category, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.klausapp.Category.displayName = 'proto.klausapp.Category';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.klausapp.DateScore = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.klausapp.DateScore, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.klausapp.DateScore.displayName = 'proto.klausapp.DateScore';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.klausapp.CategoryScore = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.klausapp.CategoryScore, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.klausapp.CategoryScore.displayName = 'proto.klausapp.CategoryScore';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.klausapp.CategoryScoreOverTimePeriod = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.klausapp.CategoryScoreOverTimePeriod.repeatedFields_, null);
};
goog.inherits(proto.klausapp.CategoryScoreOverTimePeriod, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.klausapp.CategoryScoreOverTimePeriod.displayName = 'proto.klausapp.CategoryScoreOverTimePeriod';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.klausapp.TicketScoreByCategory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.klausapp.TicketScoreByCategory.repeatedFields_, null);
};
goog.inherits(proto.klausapp.TicketScoreByCategory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.klausapp.TicketScoreByCategory.displayName = 'proto.klausapp.TicketScoreByCategory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.klausapp.GetScoreChangePoPRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.klausapp.GetScoreChangePoPRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.klausapp.GetScoreChangePoPRequest.displayName = 'proto.klausapp.GetScoreChangePoPRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.klausapp.OverallScore = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.klausapp.OverallScore, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.klausapp.OverallScore.displayName = 'proto.klausapp.OverallScore';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.klausapp.ScoreChangePoP = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.klausapp.ScoreChangePoP, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.klausapp.ScoreChangePoP.displayName = 'proto.klausapp.ScoreChangePoP';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.klausapp.TimePeriod.prototype.toObject = function(opt_includeInstance) {
  return proto.klausapp.TimePeriod.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.klausapp.TimePeriod} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.klausapp.TimePeriod.toObject = function(includeInstance, msg) {
  var f, obj = {
    startdate: (f = msg.getStartdate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    enddate: (f = msg.getEnddate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.klausapp.TimePeriod}
 */
proto.klausapp.TimePeriod.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.klausapp.TimePeriod;
  return proto.klausapp.TimePeriod.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.klausapp.TimePeriod} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.klausapp.TimePeriod}
 */
proto.klausapp.TimePeriod.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartdate(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEnddate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.klausapp.TimePeriod.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.klausapp.TimePeriod.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.klausapp.TimePeriod} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.klausapp.TimePeriod.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartdate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEnddate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp startDate = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.klausapp.TimePeriod.prototype.getStartdate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.klausapp.TimePeriod} returns this
*/
proto.klausapp.TimePeriod.prototype.setStartdate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.klausapp.TimePeriod} returns this
 */
proto.klausapp.TimePeriod.prototype.clearStartdate = function() {
  return this.setStartdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.klausapp.TimePeriod.prototype.hasStartdate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp endDate = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.klausapp.TimePeriod.prototype.getEnddate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.klausapp.TimePeriod} returns this
*/
proto.klausapp.TimePeriod.prototype.setEnddate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.klausapp.TimePeriod} returns this
 */
proto.klausapp.TimePeriod.prototype.clearEnddate = function() {
  return this.setEnddate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.klausapp.TimePeriod.prototype.hasEnddate = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.klausapp.Category.prototype.toObject = function(opt_includeInstance) {
  return proto.klausapp.Category.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.klausapp.Category} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.klausapp.Category.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.klausapp.Category}
 */
proto.klausapp.Category.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.klausapp.Category;
  return proto.klausapp.Category.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.klausapp.Category} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.klausapp.Category}
 */
proto.klausapp.Category.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.klausapp.Category.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.klausapp.Category.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.klausapp.Category} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.klausapp.Category.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.klausapp.Category.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.klausapp.Category} returns this
 */
proto.klausapp.Category.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.klausapp.Category.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.klausapp.Category} returns this
 */
proto.klausapp.Category.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.klausapp.DateScore.prototype.toObject = function(opt_includeInstance) {
  return proto.klausapp.DateScore.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.klausapp.DateScore} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.klausapp.DateScore.toObject = function(includeInstance, msg) {
  var f, obj = {
    date: (f = msg.getDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    score: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.klausapp.DateScore}
 */
proto.klausapp.DateScore.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.klausapp.DateScore;
  return proto.klausapp.DateScore.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.klausapp.DateScore} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.klausapp.DateScore}
 */
proto.klausapp.DateScore.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.klausapp.DateScore.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.klausapp.DateScore.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.klausapp.DateScore} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.klausapp.DateScore.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp date = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.klausapp.DateScore.prototype.getDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.klausapp.DateScore} returns this
*/
proto.klausapp.DateScore.prototype.setDate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.klausapp.DateScore} returns this
 */
proto.klausapp.DateScore.prototype.clearDate = function() {
  return this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.klausapp.DateScore.prototype.hasDate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 score = 2;
 * @return {number}
 */
proto.klausapp.DateScore.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.klausapp.DateScore} returns this
 */
proto.klausapp.DateScore.prototype.setScore = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.klausapp.CategoryScore.prototype.toObject = function(opt_includeInstance) {
  return proto.klausapp.CategoryScore.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.klausapp.CategoryScore} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.klausapp.CategoryScore.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    score: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.klausapp.CategoryScore}
 */
proto.klausapp.CategoryScore.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.klausapp.CategoryScore;
  return proto.klausapp.CategoryScore.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.klausapp.CategoryScore} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.klausapp.CategoryScore}
 */
proto.klausapp.CategoryScore.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.klausapp.CategoryScore.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.klausapp.CategoryScore.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.klausapp.CategoryScore} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.klausapp.CategoryScore.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.klausapp.CategoryScore.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.klausapp.CategoryScore} returns this
 */
proto.klausapp.CategoryScore.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 score = 2;
 * @return {number}
 */
proto.klausapp.CategoryScore.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.klausapp.CategoryScore} returns this
 */
proto.klausapp.CategoryScore.prototype.setScore = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.klausapp.CategoryScoreOverTimePeriod.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.klausapp.CategoryScoreOverTimePeriod.prototype.toObject = function(opt_includeInstance) {
  return proto.klausapp.CategoryScoreOverTimePeriod.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.klausapp.CategoryScoreOverTimePeriod} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.klausapp.CategoryScoreOverTimePeriod.toObject = function(includeInstance, msg) {
  var f, obj = {
    category: (f = msg.getCategory()) && proto.klausapp.Category.toObject(includeInstance, f),
    ratingcount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    scorebydateList: jspb.Message.toObjectList(msg.getScorebydateList(),
    proto.klausapp.DateScore.toObject, includeInstance),
    overallscore: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.klausapp.CategoryScoreOverTimePeriod}
 */
proto.klausapp.CategoryScoreOverTimePeriod.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.klausapp.CategoryScoreOverTimePeriod;
  return proto.klausapp.CategoryScoreOverTimePeriod.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.klausapp.CategoryScoreOverTimePeriod} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.klausapp.CategoryScoreOverTimePeriod}
 */
proto.klausapp.CategoryScoreOverTimePeriod.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.klausapp.Category;
      reader.readMessage(value,proto.klausapp.Category.deserializeBinaryFromReader);
      msg.setCategory(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRatingcount(value);
      break;
    case 3:
      var value = new proto.klausapp.DateScore;
      reader.readMessage(value,proto.klausapp.DateScore.deserializeBinaryFromReader);
      msg.addScorebydate(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOverallscore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.klausapp.CategoryScoreOverTimePeriod.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.klausapp.CategoryScoreOverTimePeriod.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.klausapp.CategoryScoreOverTimePeriod} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.klausapp.CategoryScoreOverTimePeriod.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategory();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.klausapp.Category.serializeBinaryToWriter
    );
  }
  f = message.getRatingcount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getScorebydateList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.klausapp.DateScore.serializeBinaryToWriter
    );
  }
  f = message.getOverallscore();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional Category category = 1;
 * @return {?proto.klausapp.Category}
 */
proto.klausapp.CategoryScoreOverTimePeriod.prototype.getCategory = function() {
  return /** @type{?proto.klausapp.Category} */ (
    jspb.Message.getWrapperField(this, proto.klausapp.Category, 1));
};


/**
 * @param {?proto.klausapp.Category|undefined} value
 * @return {!proto.klausapp.CategoryScoreOverTimePeriod} returns this
*/
proto.klausapp.CategoryScoreOverTimePeriod.prototype.setCategory = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.klausapp.CategoryScoreOverTimePeriod} returns this
 */
proto.klausapp.CategoryScoreOverTimePeriod.prototype.clearCategory = function() {
  return this.setCategory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.klausapp.CategoryScoreOverTimePeriod.prototype.hasCategory = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 ratingCount = 2;
 * @return {number}
 */
proto.klausapp.CategoryScoreOverTimePeriod.prototype.getRatingcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.klausapp.CategoryScoreOverTimePeriod} returns this
 */
proto.klausapp.CategoryScoreOverTimePeriod.prototype.setRatingcount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated DateScore scoreByDate = 3;
 * @return {!Array<!proto.klausapp.DateScore>}
 */
proto.klausapp.CategoryScoreOverTimePeriod.prototype.getScorebydateList = function() {
  return /** @type{!Array<!proto.klausapp.DateScore>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.klausapp.DateScore, 3));
};


/**
 * @param {!Array<!proto.klausapp.DateScore>} value
 * @return {!proto.klausapp.CategoryScoreOverTimePeriod} returns this
*/
proto.klausapp.CategoryScoreOverTimePeriod.prototype.setScorebydateList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.klausapp.DateScore=} opt_value
 * @param {number=} opt_index
 * @return {!proto.klausapp.DateScore}
 */
proto.klausapp.CategoryScoreOverTimePeriod.prototype.addScorebydate = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.klausapp.DateScore, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.klausapp.CategoryScoreOverTimePeriod} returns this
 */
proto.klausapp.CategoryScoreOverTimePeriod.prototype.clearScorebydateList = function() {
  return this.setScorebydateList([]);
};


/**
 * optional int32 overallScore = 4;
 * @return {number}
 */
proto.klausapp.CategoryScoreOverTimePeriod.prototype.getOverallscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.klausapp.CategoryScoreOverTimePeriod} returns this
 */
proto.klausapp.CategoryScoreOverTimePeriod.prototype.setOverallscore = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.klausapp.TicketScoreByCategory.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.klausapp.TicketScoreByCategory.prototype.toObject = function(opt_includeInstance) {
  return proto.klausapp.TicketScoreByCategory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.klausapp.TicketScoreByCategory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.klausapp.TicketScoreByCategory.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    categoryscoresList: jspb.Message.toObjectList(msg.getCategoryscoresList(),
    proto.klausapp.CategoryScore.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.klausapp.TicketScoreByCategory}
 */
proto.klausapp.TicketScoreByCategory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.klausapp.TicketScoreByCategory;
  return proto.klausapp.TicketScoreByCategory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.klausapp.TicketScoreByCategory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.klausapp.TicketScoreByCategory}
 */
proto.klausapp.TicketScoreByCategory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTicketid(value);
      break;
    case 2:
      var value = new proto.klausapp.CategoryScore;
      reader.readMessage(value,proto.klausapp.CategoryScore.deserializeBinaryFromReader);
      msg.addCategoryscores(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.klausapp.TicketScoreByCategory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.klausapp.TicketScoreByCategory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.klausapp.TicketScoreByCategory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.klausapp.TicketScoreByCategory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicketid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCategoryscoresList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.klausapp.CategoryScore.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 ticketId = 1;
 * @return {number}
 */
proto.klausapp.TicketScoreByCategory.prototype.getTicketid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.klausapp.TicketScoreByCategory} returns this
 */
proto.klausapp.TicketScoreByCategory.prototype.setTicketid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated CategoryScore categoryScores = 2;
 * @return {!Array<!proto.klausapp.CategoryScore>}
 */
proto.klausapp.TicketScoreByCategory.prototype.getCategoryscoresList = function() {
  return /** @type{!Array<!proto.klausapp.CategoryScore>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.klausapp.CategoryScore, 2));
};


/**
 * @param {!Array<!proto.klausapp.CategoryScore>} value
 * @return {!proto.klausapp.TicketScoreByCategory} returns this
*/
proto.klausapp.TicketScoreByCategory.prototype.setCategoryscoresList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.klausapp.CategoryScore=} opt_value
 * @param {number=} opt_index
 * @return {!proto.klausapp.CategoryScore}
 */
proto.klausapp.TicketScoreByCategory.prototype.addCategoryscores = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.klausapp.CategoryScore, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.klausapp.TicketScoreByCategory} returns this
 */
proto.klausapp.TicketScoreByCategory.prototype.clearCategoryscoresList = function() {
  return this.setCategoryscoresList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.klausapp.GetScoreChangePoPRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.klausapp.GetScoreChangePoPRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.klausapp.GetScoreChangePoPRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.klausapp.GetScoreChangePoPRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstperiod: (f = msg.getFirstperiod()) && proto.klausapp.TimePeriod.toObject(includeInstance, f),
    secondperiod: (f = msg.getSecondperiod()) && proto.klausapp.TimePeriod.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.klausapp.GetScoreChangePoPRequest}
 */
proto.klausapp.GetScoreChangePoPRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.klausapp.GetScoreChangePoPRequest;
  return proto.klausapp.GetScoreChangePoPRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.klausapp.GetScoreChangePoPRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.klausapp.GetScoreChangePoPRequest}
 */
proto.klausapp.GetScoreChangePoPRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.klausapp.TimePeriod;
      reader.readMessage(value,proto.klausapp.TimePeriod.deserializeBinaryFromReader);
      msg.setFirstperiod(value);
      break;
    case 2:
      var value = new proto.klausapp.TimePeriod;
      reader.readMessage(value,proto.klausapp.TimePeriod.deserializeBinaryFromReader);
      msg.setSecondperiod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.klausapp.GetScoreChangePoPRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.klausapp.GetScoreChangePoPRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.klausapp.GetScoreChangePoPRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.klausapp.GetScoreChangePoPRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFirstperiod();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.klausapp.TimePeriod.serializeBinaryToWriter
    );
  }
  f = message.getSecondperiod();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.klausapp.TimePeriod.serializeBinaryToWriter
    );
  }
};


/**
 * optional TimePeriod firstPeriod = 1;
 * @return {?proto.klausapp.TimePeriod}
 */
proto.klausapp.GetScoreChangePoPRequest.prototype.getFirstperiod = function() {
  return /** @type{?proto.klausapp.TimePeriod} */ (
    jspb.Message.getWrapperField(this, proto.klausapp.TimePeriod, 1));
};


/**
 * @param {?proto.klausapp.TimePeriod|undefined} value
 * @return {!proto.klausapp.GetScoreChangePoPRequest} returns this
*/
proto.klausapp.GetScoreChangePoPRequest.prototype.setFirstperiod = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.klausapp.GetScoreChangePoPRequest} returns this
 */
proto.klausapp.GetScoreChangePoPRequest.prototype.clearFirstperiod = function() {
  return this.setFirstperiod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.klausapp.GetScoreChangePoPRequest.prototype.hasFirstperiod = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TimePeriod secondPeriod = 2;
 * @return {?proto.klausapp.TimePeriod}
 */
proto.klausapp.GetScoreChangePoPRequest.prototype.getSecondperiod = function() {
  return /** @type{?proto.klausapp.TimePeriod} */ (
    jspb.Message.getWrapperField(this, proto.klausapp.TimePeriod, 2));
};


/**
 * @param {?proto.klausapp.TimePeriod|undefined} value
 * @return {!proto.klausapp.GetScoreChangePoPRequest} returns this
*/
proto.klausapp.GetScoreChangePoPRequest.prototype.setSecondperiod = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.klausapp.GetScoreChangePoPRequest} returns this
 */
proto.klausapp.GetScoreChangePoPRequest.prototype.clearSecondperiod = function() {
  return this.setSecondperiod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.klausapp.GetScoreChangePoPRequest.prototype.hasSecondperiod = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.klausapp.OverallScore.prototype.toObject = function(opt_includeInstance) {
  return proto.klausapp.OverallScore.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.klausapp.OverallScore} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.klausapp.OverallScore.toObject = function(includeInstance, msg) {
  var f, obj = {
    score: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.klausapp.OverallScore}
 */
proto.klausapp.OverallScore.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.klausapp.OverallScore;
  return proto.klausapp.OverallScore.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.klausapp.OverallScore} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.klausapp.OverallScore}
 */
proto.klausapp.OverallScore.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.klausapp.OverallScore.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.klausapp.OverallScore.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.klausapp.OverallScore} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.klausapp.OverallScore.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 score = 1;
 * @return {number}
 */
proto.klausapp.OverallScore.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.klausapp.OverallScore} returns this
 */
proto.klausapp.OverallScore.prototype.setScore = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.klausapp.ScoreChangePoP.prototype.toObject = function(opt_includeInstance) {
  return proto.klausapp.ScoreChangePoP.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.klausapp.ScoreChangePoP} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.klausapp.ScoreChangePoP.toObject = function(includeInstance, msg) {
  var f, obj = {
    scorechange: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.klausapp.ScoreChangePoP}
 */
proto.klausapp.ScoreChangePoP.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.klausapp.ScoreChangePoP;
  return proto.klausapp.ScoreChangePoP.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.klausapp.ScoreChangePoP} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.klausapp.ScoreChangePoP}
 */
proto.klausapp.ScoreChangePoP.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScorechange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.klausapp.ScoreChangePoP.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.klausapp.ScoreChangePoP.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.klausapp.ScoreChangePoP} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.klausapp.ScoreChangePoP.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScorechange();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 scoreChange = 1;
 * @return {number}
 */
proto.klausapp.ScoreChangePoP.prototype.getScorechange = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.klausapp.ScoreChangePoP} returns this
 */
proto.klausapp.ScoreChangePoP.prototype.setScorechange = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


goog.object.extend(exports, proto.klausapp);
